{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./components/series/index.js","webpack:///../src/index.js","webpack:///./components/header/index.js","webpack:///./index.js","webpack:///./components/app.js","webpack:///../src/util.js","webpack:///../src/create-element.js","webpack:///../src/component.js","webpack:///../src/diff/children.js","webpack:///../src/diff/props.js","webpack:///../src/diff/index.js","webpack:///../src/render.js","webpack:///../src/clone-element.js","webpack:///../src/create-context.js","webpack:///../src/constants.js","webpack:///../src/options.js","webpack:///../src/diff/catch-error.js","webpack:///../node_modules/preact-cli/lib/lib/entry.js"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Series","serie","series","setSeries","useState","useEffect","async","response","fetch","data","json","getSeriesInfo","Title","Year","Runtime","imdbRating","imdbVotes","Poster","Genre","Plot","Actors","style","backgroundImage","backgroundColor","className","src","alt","getHookState","index","type","options","currentComponent","currentHook","hooks","length","push","initialState","reducer","init","hookState","currentIndex","_reducer","invokeOrReturn","nextValue","action","setState","useReducer","callback","args","state","argsChanged","flushAfterPaintEffects","afterPaintEffects","forEach","component","invokeCleanup","invokeEffect","e","hook","comp","oldArgs","newArgs","some","arg","f","prevRaf","oldBeforeDiff","oldBeforeRender","oldAfterDiff","diffed","oldCommit","oldBeforeUnmount","unmount","vnode","requestAnimationFrame","raf","done","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","setTimeout","commitQueue","filter","cb","Header","setSerie","search","setSearch","query","setQuery","onSubmit","preventDefault","text","replace","submitHandler","onChange","target","inputHandler","placeholder","App","document","title","assign","obj","props","removeNode","node","parentNode","removeChild","createElement","children","ref","normalizedProps","arguments","slice","defaultProps","createVNode","original","undefined","constructor","vnodeId","createRef","current","Fragment","Component","context","getDomSibling","childIndex","indexOf","sibling","updateParentDomPointers","child","base","enqueueRender","rerenderQueue","process","prevDebounce","debounceRendering","defer","queue","sort","a","b","oldVNode","oldDom","parentDom","diff","ownerSVGElement","commitRoot","diffChildren","renderResult","newParentVNode","oldParentVNode","globalContext","isSvg","excessDomChildren","isHydrating","j","childVNode","newDom","firstChildDom","refs","oldChildren","EMPTY_ARR","oldChildrenLength","Array","isArray","EMPTY_OBJ","reorderChildren","placeChild","applyRef","tmp","toChildArray","out","nextDom","sibDom","outer","appendChild","nextSibling","insertBefore","setStyle","setProperty","IS_NON_DIMENSIONAL","test","dom","oldValue","useCapture","cssText","toLowerCase","_listeners","addEventListener","eventProxyCapture","eventProxy","removeEventListener","setAttribute","removeAttribute","event","newVNode","isNew","oldProps","oldState","snapshot","clearProcessingException","newProps","provider","componentContext","newType","contextType","render","doRender","sub","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","diffElementNodes","root","oldHtml","newHtml","nodeType","localName","createTextNode","createElementNS","is","childNodes","dangerouslySetInnerHTML","attributes","innerHTML","hydrate","diffProps","checked","parentVNode","skipRemove","componentWillUnmount","this","replaceNode","firstChild","cloneElement","createContext","defaultValue","contextId","Consumer","contextValue","Provider","subs","ctx","_props","old","splice","isValidElement","error","ctor","handled","getDerivedStateFromError","componentDidCatch","update","forceUpdate","Promise","then","resolve","h","Preact","interopDefault","default","normalizeURL","url","navigator","serviceWorker","register","__webpack_public_path__","require","getElementById","body","firstElementChild","app","preRenderData","inlineDataElement","querySelector","JSON","parse","decodeURI","CLI_DATA","currentURL","canHydrate","location","pathname"],"mappings":"aAIE,SAASA,EAAoBC,GAG5B,GAAGC,EAAiBD,GACnB,OAAOC,EAAiBD,GAAUE,QAGnC,IAAIC,EAASF,EAAiBD,GAAY,CACzCI,EAAGJ,EACHK,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQN,GAAUO,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG/DI,EAAOE,GAAI,EAGJF,EAAOD,QAvBf,IAAID,EAAmB,GA4BvBF,EAAoBS,EAAIF,EAGxBP,EAAoBU,EAAIR,EAGxBF,EAAoBW,EAAI,SAASR,EAASS,EAAMC,GAC3Cb,EAAoBc,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEb,EAAoBmB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDtB,EAAoBuB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQtB,EAAoBsB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA3B,EAAoBmB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOtB,EAAoBW,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIR1B,EAAoB8B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAJ,EAAoBW,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRb,EAAoBc,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzGhC,EAAoBmC,EAAI,IAIjBnC,EAAoBA,EAAoBoC,EAAI,Q,qCClFrD,4BA2DeC,IAzDf,UAAgB,MAACC,IACb,MAAOC,EAAQC,GAAaC,YAAS,IAOrCC,aAAU,KANYC,WAClB,MAAMC,QAAiBC,MAAO,8CAAsEP,KAC9FQ,QAAaF,EAASG,OAC5BP,EAAUM,IAIVE,KACD,CAACV,IAEJ,MAAM,MAAEW,EAAF,KAASC,EAAT,QAAeC,EAAf,WAAwBC,EAAxB,UAAoCC,EAApC,OAA+CC,EAA/C,MAAuDC,EAAvD,KAA8DC,EAA9D,OAAoEC,GAAWlB,EAErF,OACI,aAASmB,MACL,CACIC,gBAAkB,OAAML,KACxBM,gBAAiB,cAIrB,aAASC,UAAU,QACf,SAAKA,UAAU,UACX,SAAKC,IAAKR,EAAQS,IAAI,MAE1B,SAAKF,UAAU,cACX,SAAKA,UAAU,aACX,QAAIA,UAAU,SAASZ,GACvB,SAAKY,UAAU,aACX,YAAKX,GACL,YAAKC,GACL,YAAKI,KAGb,OAAGM,UAAU,QACRL,GAEL,OAAGK,UAAU,UACRJ,GAEL,aAASI,UAAU,WACf,SAAKA,UAAU,QACX,6BACA,YAAKT,IAET,SAAKS,UAAU,SACX,4BACA,YAAKR,W,0DCwCjC,SAASW,EAAaC,EAAOC,GACxBC,eACHA,cAAcC,EAAkBH,EAAOI,GAAeH,GAEvDG,EAAc,MAORC,EACLF,QACCA,MAA2B,IACpB,OACU,YAGfH,GAASK,KAAYC,QACxBD,KAAYE,KAAK,IAEXF,KAAYL,GAMb,SAASxB,EAASgC,UACxBJ,EAAc,EAUf,SAA2BK,EAASD,EAAcE,OAE3CC,EAAYZ,EAAaa,IAAgB,UAC/CD,EAAUE,EAAWJ,EAChBE,QACJA,KAAmB,CACjBD,EAAiDA,EAAKF,GAA/CM,SAA0BN,GAElC,gBACOO,EAAYJ,EAAUE,EAASF,KAAiB,GAAIK,GACtDL,KAAiB,KAAOI,IAC3BJ,KAAmB,CAACI,EAAWJ,KAAiB,IAChDA,MAAqBM,SAAS,OAKjCN,MAAuBR,GAGjBQ,KA7BAO,CAAWJ,EAAgBN,GAoC5B,SAAS/B,EAAU0C,EAAUC,OAE7BC,EAAQtB,EAAaa,IAAgB,IACtCV,eAAwBoB,EAAYD,MAAaD,KACrDC,KAAeF,EACfE,MAAcD,EAEdjB,UAAyCI,KAAKc,IA2HhD,SAASE,IACRC,EAAkBC,SAAQ,eACrBC,UAEFA,UAAkCD,QAAQE,GAC1CD,UAAkCD,QAAQG,GAC1CF,UAAoC,GACnC,MAAOG,GACRH,UAAoC,GACpCxB,cAAoB2B,EAAGH,WAI1BF,EAAoB,GA8CrB,SAASG,EAAcG,OAGhBC,EAAO5B,EACe,mBAAjB2B,OAA6BA,QACxC3B,EAAmB4B,EAOpB,SAASH,EAAaE,OAGfC,EAAO5B,EACb2B,MAAgBA,OAChB3B,EAAmB4B,EAOpB,SAAST,EAAYU,EAASC,UAE3BD,GACDA,EAAQ1B,SAAW2B,EAAQ3B,QAC3B2B,EAAQC,MAAK,SAACC,EAAKnC,UAAUmC,IAAQH,EAAQhC,MAI/C,SAASc,EAAeqB,EAAKC,SACT,mBAALA,EAAkBA,EAAED,GAAOC,E,wEAtXtCxB,EAGAT,EAeAkC,E,YAZAjC,EAAc,EAGdoB,EAAoB,GAEpBc,EAAgBpC,cAChBqC,EAAkBrC,cAClBsC,EAAetC,UAAQuC,OACvBC,EAAYxC,cACZyC,EAAmBzC,UAAQ0C,QAK/B1C,cAAgB,YACfC,EAAmB,KACfmC,GAAeA,EAAcO,IAGlC3C,cAAkB,YACbqC,GAAiBA,EAAgBM,GAGrCjC,EAAe,MAETP,GAHNF,EAAmB0C,WAIfxC,IACHA,MAAsBoB,QAAQE,GAC9BtB,MAAsBoB,QAAQG,GAC9BvB,MAAwB,KAI1BH,UAAQuC,OAAS,YACZD,GAAcA,EAAaK,OAEzBpG,EAAIoG,MACNpG,GAAKA,OAAaA,UAA0B6D,SAiSzB,IAhSXkB,EAAkBjB,KAAK9D,IAgSP4F,IAAYnC,UAAQ4C,yBAC/CT,EAAUnC,UAAQ4C,wBAvBpB,SAAwB3B,OAQnB4B,EAPEC,EAAO,WACZC,aAAaC,GACTC,GAASC,qBAAqBL,GAClCM,WAAWlC,IAEN+B,EAAUG,WAAWL,EA3SR,KA8SfG,IACHJ,EAAMD,sBAAsBE,MAcAzB,IAhS7BpB,EAAmB,MAGpBD,cAAkB,SAAC2C,EAAOS,GACzBA,EAAYpB,MAAK,gBAEfR,MAA2BD,QAAQE,GACnCD,MAA6BA,MAA2B6B,QAAO,mBAC9DC,MAAY5B,EAAa4B,MAEzB,MAAO3B,GACRyB,EAAYpB,MAAK,YACZzF,QAAoBA,MAAqB,OAE9C6G,EAAc,GACdpD,cAAoB2B,EAAGH,WAIrBgB,GAAWA,EAAUG,EAAOS,IAGjCpD,UAAQ0C,QAAU,YACbD,GAAkBA,EAAiBE,OAEjCpG,EAAIoG,SACNpG,GAAKA,UAEPA,SAAgBgF,QAAQE,GACvB,MAAOE,GACR3B,cAAoB2B,EAAGpF,SA8N1B,IAAI0G,EAA0C,mBAAzBL,uB,qEC7QNW,MA7BA,EAAEC,eAChB,MAAOC,EAAQC,GAAapF,YAAS,KAC3BqF,EAAOC,GAAYtF,YAAS,IAYnC,OACI,0BACI,kBAAIoB,UAAU,6BAAd,cACA,oBAAMmE,SAAWlC,GAVFA,KACnBA,EAAEmC,iBACF,MAAMC,EAAKN,EAAOO,QAAQ,IAAI,KAC9BJ,EAASG,GACTP,EAASO,GACTL,EAAU,KAKeO,CAActC,IAC/B,qBACA5B,KAAK,OACL5C,MAAOsG,EACPS,SAAWvC,GAjBDA,KAClB+B,EAAU/B,EAAEwC,OAAOhH,QAgBMiH,CAAazC,GAC9B0C,YAAY,c,YCtBbC,UCKH,KACX,MAAOnG,EAAOqF,GAAYlF,YAAS,mBAMnC,OAJAC,aAAU,KACTgG,SAASC,MAAM,4BACb,IAGF,mBAAK9E,UAAU,OACd,YAAC,EAAD,CAAQ8D,SAAUA,IAClB,YAAC,IAAD,CAAQrF,MAAOA,O,kCCTX,SAASsG,EAAOC,EAAKC,OAEtB,IAAIzI,KAAKyI,EAAOD,EAAIxI,GAAKyI,EAAMzI,UACPwI,EASvB,SAASE,EAAWC,OACtBC,EAAaD,EAAKC,WAClBA,GAAYA,EAAWC,YAAYF,GCVxC,SAAgBG,EAAcjF,EAAM4E,EAAOM,OAEzCxH,EACAyH,EACAhJ,EAHGiJ,EAAkB,OAIjBjJ,KAAKyI,EACA,OAALzI,EAAYuB,EAAMkH,EAAMzI,GACd,OAALA,EAAYgJ,EAAMP,EAAMzI,GAC5BiJ,EAAgBjJ,GAAKyI,EAAMzI,MAG7BkJ,UAAUhF,OAAS,IACtB+E,EAAgBF,SACfG,UAAUhF,OAAS,EAAIiF,EAAMhJ,KAAK+I,UAAW,GAAKH,GAKjC,mBAARlF,GAA2C,MAArBA,EAAKuF,iBAChCpJ,KAAK6D,EAAKuF,sBACVH,EAAgBjJ,KACnBiJ,EAAgBjJ,GAAK6D,EAAKuF,aAAapJ,WAKnCqJ,EAAYxF,EAAMoF,EAAiB1H,EAAKyH,EAAK,MAe9C,SAASK,EAAYxF,EAAM4E,EAAOlH,EAAKyH,EAAKM,OAG5C7C,EAAQ,CACb5C,OACA4E,QACAlH,MACAyH,UACW,QACF,SACD,MACF,gBAKIO,IACE,SACA,KACZC,mBAAaD,IACU,MAAZD,IAAqBG,EAAUH,UAI3B,MAAZA,GAAqC,MAAjBxF,EAAQ2C,OAAe3C,EAAQ2C,MAAMA,GAEtDA,EAGR,SAAgBiD,UACR,CAAEC,QAAS,MAGZ,SAASC,EAASnB,UACjBA,EAAMM,SC5EP,SAASc,EAAUpB,EAAOqB,QAC3BrB,MAAQA,OACRqB,QAAUA,EAyET,SAASC,EAActD,EAAOuD,MAClB,MAAdA,SAEIvD,KACJsD,EAActD,KAAeA,SAAwBwD,QAAQxD,GAAS,GACtE,aAGAyD,EACGF,EAAavD,MAAgBvC,OAAQ8F,OAG5B,OAFfE,EAAUzD,MAAgBuD,KAEa,MAAhBE,aAIfA,YASmB,mBAAdzD,EAAM5C,KAAqBkG,EAActD,GAAS,KAuCjE,SAAS0D,EAAwB1D,GAAjC,IAGWzG,EACJoK,KAHyB,OAA1B3D,EAAQA,OAA8C,MAApBA,MAA0B,KAChEA,MAAaA,MAAiB4D,KAAO,KAC5BrK,EAAI,EAAGA,EAAIyG,MAAgBvC,OAAQlE,OAE9B,OADToK,EAAQ3D,MAAgBzG,KACO,MAAdoK,MAAoB,CACxC3D,MAAaA,MAAiB4D,KAAOD,mBAKhCD,EAAwB1D,IAoC1B,SAAS6D,EAAcjK,KAE1BA,QACAA,WACDkK,EAAcpG,KAAK9D,KAClBmK,SACFC,IAAiB3G,EAAQ4G,sBAEzBD,EAAe3G,EAAQ4G,oBACNC,GAAOH,GAK1B,SAASA,YACJI,EACIJ,MAAyBD,EAAcrG,QAC9C0G,EAAQL,EAAcM,MAAK,SAACC,EAAGC,UAAMD,UAAkBC,aACvDR,EAAgB,GAGhBK,EAAM9E,MAAK,YApGb,IAAyBR,EAMnB4B,EACE8D,EANHvE,EACHwE,EACAC,EAkGK7K,QAnGL4K,GADGxE,GADoBnB,EAqGQjF,aAlG/B6K,EAAY5F,SAGR4B,EAAc,IACZ8D,EAAWzC,EAAO,GAAI9B,QACPA,MAAkB,EAEvC0E,EACCD,EACAzE,EACAuE,EACA1F,eACA4F,EAAUE,gBACU,MAApB3E,MAA2B,CAACwE,GAAU,KACtC/D,EACU,MAAV+D,EAAiBlB,EAActD,GAASwE,EACxCxE,OAED4E,EAAWnE,EAAaT,GAEpBA,OAAcwE,GACjBd,EAAwB1D,QCtH3B,SAAgB6E,EACfJ,EACAK,EACAC,EACAC,EACAC,EACAC,EACAC,EACA1E,EACA+D,EACAY,GAVD,IAYK7L,EAAG8L,EAAGd,EAAUe,EAAYC,EAAQC,EAAeC,EAInDC,EAAeV,GAAkBA,OAA6BW,EAE9DC,EAAoBF,EAAYjI,WAEpCsH,MAA2B,GACtBxL,EAAI,EAAGA,EAAIuL,EAAarH,OAAQlE,OAgDlB,OA5CjB+L,EAAaP,MAAyBxL,GADrB,OAFlB+L,EAAaR,EAAavL,KAEqB,kBAAd+L,EACW,KAMtB,iBAAdA,GACc,iBAAdA,GAEc,iBAAdA,EAEoC1C,EAC1C,KACA0C,EACA,KACA,KACAA,GAESO,MAAMC,QAAQR,GACmB1C,EAC1CO,EACA,CAAEb,SAAUgD,GACZ,KACA,KACA,MAESA,MAAoB,EAKa1C,EAC1C0C,EAAWlI,KACXkI,EAAWtD,MACXsD,EAAWxK,IACX,KACAwK,OAG0CA,OAS5CA,KAAqBP,EACrBO,MAAoBP,MAAwB,EAS9B,QAHdR,EAAWmB,EAAYnM,KAIrBgL,GACAe,EAAWxK,KAAOyJ,EAASzJ,KAC3BwK,EAAWlI,OAASmH,EAASnH,KAE9BsI,EAAYnM,eAAKuJ,IAIZuC,EAAI,EAAGA,EAAIO,EAAmBP,IAAK,KACvCd,EAAWmB,EAAYL,KAKtBC,EAAWxK,KAAOyJ,EAASzJ,KAC3BwK,EAAWlI,OAASmH,EAASnH,KAC5B,CACDsI,EAAYL,UAAKvC,MAGlByB,EAAW,KAObG,EACCD,EACAa,EALDf,EAAWA,GAAYwB,EAOtBd,EACAC,EACAC,EACA1E,EACA+D,EACAY,GAGDG,EAASD,OAEJD,EAAIC,EAAW/C,MAAQgC,EAAShC,KAAO8C,IACtCI,IAAMA,EAAO,IACdlB,EAAShC,KAAKkD,EAAK/H,KAAK6G,EAAShC,IAAK,KAAM+C,GAChDG,EAAK/H,KAAK2H,EAAGC,OAAyBC,EAAQD,IAGjC,MAAVC,GACkB,MAAjBC,IACHA,EAAgBD,GAIU,mBAAnBD,EAAWlI,MAClBkI,QAAyBf,MAEzBe,MAAsBd,EAASwB,EAC9BV,EACAd,EACAC,GAGDD,EAASyB,EACRxB,EACAa,EACAf,EACAmB,EACAH,EACAf,GAIgC,mBAAvBO,EAAe3H,OAQzB2H,MAA0BP,IAG3BA,GACAD,OAAiBC,GACjBA,EAAOrC,YAAcsC,IAIrBD,EAASlB,EAAciB,QAIzBQ,MAAsBS,EAGjBjM,EAAIqM,EAAmBrM,KACL,MAAlBmM,EAAYnM,KAEgB,mBAAvBwL,EAAe3H,MACC,MAAvBsI,EAAYnM,QACZmM,EAAYnM,QAAWwL,QAKvBA,MAA0BzB,EAAc0B,EAAgBzL,EAAI,IAG7DwG,EAAQ2F,EAAYnM,GAAImM,EAAYnM,QAKlCkM,MACElM,EAAI,EAAGA,EAAIkM,EAAKhI,OAAQlE,IAC5B2M,EAAST,EAAKlM,GAAIkM,IAAOlM,GAAIkM,IAAOlM,IAKvC,SAASyM,EAAgBV,EAAYd,EAAQC,OAA7C,IAKMzE,EAHDpG,EAAI0L,MACJa,EAAM,EACHvM,GAAKuM,EAAMvM,EAAE6D,OAAQ0I,KACvBnG,EAAQpG,EAAEuM,MAMbnG,KAAgBsF,EAGfd,EADwB,mBAAdxE,EAAM5C,KACP4I,EAAgBhG,EAAOwE,EAAQC,GAE/BwB,EACRxB,EACAzE,EACAA,EACApG,EACAoG,MACAwE,WAMGA,EASD,SAAS4B,EAAa9D,EAAU+D,UACtCA,EAAMA,GAAO,GACG,MAAZ/D,GAAuC,kBAAZA,IACpBuD,MAAMC,QAAQxD,GACxBA,EAASjD,MAAK,YACb+G,EAAazC,EAAO0C,MAGrBA,EAAI3I,KAAK4E,IAEH+D,EAGR,SAASJ,EACRxB,EACAa,EACAf,EACAmB,EACAH,EACAf,GAND,IAQK8B,EAuBGC,EAAiBlB,cAtBpBC,MAIHgB,EAAUhB,MAMVA,kBACM,GACM,MAAZf,GACAgB,GAAUf,GACW,MAArBe,EAAOpD,WAEPqE,EAAO,GAAc,MAAVhC,GAAkBA,EAAOrC,aAAesC,EAClDA,EAAUgC,YAAYlB,GACtBe,EAAU,SACJ,KAGDC,EAAS/B,EAAQa,EAAI,GACxBkB,EAASA,EAAOG,cAAgBrB,EAAIK,EAAYjI,OACjD4H,GAAK,KAEDkB,GAAUhB,QACPiB,EAGR/B,EAAUkC,aAAapB,EAAQf,GAC/B8B,EAAU9B,kBAOR8B,EACMA,EAEAf,EAAOmB,YCvSlB,SAASE,EAAShK,EAAO9B,EAAKN,GACd,MAAXM,EAAI,GACP8B,EAAMiK,YAAY/L,EAAKN,GAEvBoC,EAAM9B,GADa,MAATN,EACG,GACa,iBAATA,GAAqBsM,EAAmBC,KAAKjM,GACjDN,EAEAA,EAAQ,KAYhB,SAASqM,EAAYG,EAAKlN,EAAMU,EAAOyM,EAAU/B,GAAjD,IACFgC,EAEJlN,EAAG,GAAa,UAATF,KACc,iBAATU,EACVwM,EAAIpK,MAAMuK,QAAU3M,MACd,IACiB,iBAAZyM,IACVD,EAAIpK,MAAMuK,QAAUF,EAAW,IAG5BA,MACEnN,KAAQmN,EACNzM,GAASV,KAAQU,GACtBoM,EAASI,EAAIpK,MAAO9C,EAAM,OAKzBU,MACEV,KAAQU,EACPyM,GAAYzM,EAAMV,KAAUmN,EAASnN,IACzC8M,EAASI,EAAIpK,MAAO9C,EAAMU,EAAMV,SAOhC,GAAgB,MAAZA,EAAK,IAA0B,MAAZA,EAAK,GAChCoN,EAAapN,KAAUA,EAAOA,EAAKuH,QAAQ,WAAY,KAGxBvH,EAA3BA,EAAKsN,gBAAiBJ,EAAYlN,EAAKsN,cAAc1E,MAAM,GACnD5I,EAAK4I,MAAM,GAElBsE,EAAIK,IAAYL,EAAIK,EAAa,IACtCL,EAAIK,EAAWvN,EAAOoN,GAAc1M,EAEhCA,EACEyM,GAEJD,EAAIM,iBAAiBxN,EADLoN,EAAaK,EAAoBC,EACbN,GAIrCF,EAAIS,oBAAoB3N,EADRoN,EAAaK,EAAoBC,EACVN,QAElC,GAAa,4BAATpN,EAAoC,IAC1CoL,EAIHpL,EAAOA,EAAKuH,QAAQ,aAAc,KAAKA,QAAQ,SAAU,UACnD,GACG,SAATvH,GACS,SAATA,GACS,SAATA,GAGS,aAATA,GACS,aAATA,GACAA,KAAQkN,MAGPA,EAAIlN,GAAiB,MAATU,EAAgB,GAAKA,QAE3BR,EACL,MAAOgF,IAUW,mBAAVxE,IAGD,MAATA,SACCA,GAAgC,MAAZV,EAAK,IAA0B,MAAZA,EAAK,IAE7CkN,EAAIU,aAAa5N,EAAMU,GAEvBwM,EAAIW,gBAAgB7N,KAUvB,SAAS0N,EAAWxI,QACdqI,EAAWrI,EAAE5B,SAAcC,EAAQuK,MAAQvK,EAAQuK,MAAM5I,GAAKA,GAGpE,SAASuI,EAAkBvI,QACrBqI,EAAWrI,EAAE5B,SAAaC,EAAQuK,MAAQvK,EAAQuK,MAAM5I,GAAKA,GCpInE,SAAgB0F,EACfD,EACAoD,EACAtD,EACAU,EACAC,EACAC,EACA1E,EACA+D,EACAY,GATD,IAWKe,EAoBEvM,EAAGkO,EAAOC,EAAUC,EAAUC,EAAUC,EACxCC,EAKAC,EACAC,EAqIAvD,EA/JLwD,EAAUT,EAASzK,iBAIhByK,EAAS9E,YAA2B,OAAO,KAGpB,MAAvBwB,QACHa,EAAcb,MACdC,EAASqD,MAAgBtD,MAEzBsD,MAAsB,KACtB1C,EAAoB,CAACX,KAGjB2B,EAAM9I,QAAgB8I,EAAI0B,OAG9BrB,EAAO,GAAsB,mBAAX8B,EAAuB,IAEpCH,EAAWN,EAAS7F,MAKpBoG,GADJjC,EAAMmC,EAAQC,cACQtD,EAAckB,OAChCkC,EAAmBlC,EACpBiC,EACCA,EAASpG,MAAMxH,MACf2L,KACDlB,EAGCV,MAEH2D,GADAtO,EAAIiO,MAAsBtD,UAC0B3K,OAGhD,cAAe0O,GAAWA,EAAQnN,UAAUqN,OAE/CX,MAAsBjO,EAAI,IAAI0O,EAAQH,EAAUE,IAGhDR,MAAsBjO,EAAI,IAAIwJ,EAAU+E,EAAUE,GAClDzO,EAAEmJ,YAAcuF,EAChB1O,EAAE4O,OAASC,GAERL,GAAUA,EAASM,IAAI9O,GAE3BA,EAAEoI,MAAQmG,EACLvO,EAAE4E,QAAO5E,EAAE4E,MAAQ,IACxB5E,EAAEyJ,QAAUgF,EACZzO,MAAmBqL,EACnB6C,EAAQlO,SACRA,MAAqB,IAIF,MAAhBA,QACHA,MAAeA,EAAE4E,OAEsB,MAApC8J,EAAQK,2BACP/O,OAAgBA,EAAE4E,QACrB5E,MAAekI,EAAO,GAAIlI,QAG3BkI,EACClI,MACA0O,EAAQK,yBAAyBR,EAAUvO,SAI7CmO,EAAWnO,EAAEoI,MACbgG,EAAWpO,EAAE4E,MAGTsJ,EAEkC,MAApCQ,EAAQK,0BACgB,MAAxB/O,EAAEgP,oBAEFhP,EAAEgP,qBAGwB,MAAvBhP,EAAEiP,mBACLjP,MAAmB8D,KAAK9D,EAAEiP,uBAErB,IAE+B,MAApCP,EAAQK,0BACRR,IAAaJ,GACkB,MAA/BnO,EAAEkP,2BAEFlP,EAAEkP,0BAA0BX,EAAUE,IAIpCzO,OAC0B,MAA3BA,EAAEmP,4BACFnP,EAAEmP,sBACDZ,EACAvO,MACAyO,IAEFR,QAAuBtD,MACtB,CACD3K,EAAEoI,MAAQmG,EACVvO,EAAE4E,MAAQ5E,MAENiO,QAAuBtD,QAAoB3K,UAC/CA,MAAWiO,EACXA,MAAgBtD,MAChBsD,MAAqBtD,MACrBsD,MAAmBjJ,SAAQ,YACtBoB,IAAOA,KAAgB6H,MAExBjO,MAAmB6D,QACtBgD,EAAY/C,KAAK9D,SAGZ4M,EAGsB,MAAzB5M,EAAEoP,qBACLpP,EAAEoP,oBAAoBb,EAAUvO,MAAcyO,GAGnB,MAAxBzO,EAAEqP,oBACLrP,MAAmB8D,MAAK,WACvB9D,EAAEqP,mBAAmBlB,EAAUC,EAAUC,MAK5CrO,EAAEyJ,QAAUgF,EACZzO,EAAEoI,MAAQmG,EACVvO,EAAE4E,MAAQ5E,OAELuM,EAAM9I,QAAkB8I,EAAI0B,GAEjCjO,SACAA,MAAWiO,EACXjO,MAAe6K,EAEf0B,EAAMvM,EAAE4O,OAAO5O,EAAEoI,MAAOpI,EAAE4E,MAAO5E,EAAEyJ,SAGnCzJ,EAAE4E,MAAQ5E,MAEe,MAArBA,EAAEsP,kBACLjE,EAAgBnD,EAAOA,EAAO,GAAImD,GAAgBrL,EAAEsP,oBAGhDpB,GAAsC,MAA7BlO,EAAEuP,0BACflB,EAAWrO,EAAEuP,wBAAwBpB,EAAUC,IAK5ClD,EADI,MAAPqB,GAAeA,EAAI/I,OAAS+F,GAAuB,MAAXgD,EAAIrL,IACLqL,EAAInE,MAAMM,SAAW6D,EAE7DtB,EACCJ,EACAoB,MAAMC,QAAQhB,GAAgBA,EAAe,CAACA,GAC9C+C,EACAtD,EACAU,EACAC,EACAC,EACA1E,EACA+D,EACAY,GAGDxL,EAAEgK,KAAOiE,MAGTA,MAAsB,KAElBjO,MAAmB6D,QACtBgD,EAAY/C,KAAK9D,GAGdsO,IACHtO,MAAkBA,KAAyB,MAG5CA,cAEqB,MAArBuL,GACA0C,QAAuBtD,OAEvBsD,MAAqBtD,MACrBsD,MAAgBtD,OAEhBsD,MAAgBuB,EACf7E,MACAsD,EACAtD,EACAU,EACAC,EACAC,EACA1E,EACA2E,IAIGe,EAAM9I,EAAQuC,SAASuG,EAAI0B,GAC/B,MAAO7I,GACR6I,MAAqB,MAEjBzC,GAAoC,MAArBD,KAClB0C,MAAgBrD,EAChBqD,QAAwBzC,EACxBD,EAAkBA,EAAkB3B,QAAQgB,IAAW,MAIxDnH,MAAoB2B,EAAG6I,EAAUtD,IAS5B,SAASK,EAAWnE,EAAa4I,GACnChM,OAAiBA,MAAgBgM,EAAM5I,GAE3CA,EAAYpB,MAAK,gBAGfoB,EAAc7G,MACdA,MAAqB,GACrB6G,EAAYpB,MAAK,YAEhBsB,EAAGjH,KAAKE,MAER,MAAOoF,GACR3B,MAAoB2B,EAAGpF,WAmB1B,SAASwP,EACRpC,EACAa,EACAtD,EACAU,EACAC,EACAC,EACA1E,EACA2E,GARD,IAoBSzB,EAsDH2F,EACAC,EAjEDxB,EAAWxD,EAASvC,MACpBmG,EAAWN,EAAS7F,MACpBwH,EAAW3B,EAASzK,KACpB7D,EAAI,KAGS,QAAbiQ,IAAoBtE,MAEC,MAArBC,OACI5L,EAAI4L,EAAkB1H,OAAQlE,QAC9BoK,EAAQwB,EAAkB5L,MAO9BoK,IAAUqD,IACTwC,EAAW7F,EAAM8F,WAAaD,EAA6B,GAAlB7F,EAAM6F,WAChD,CACDxC,EAAMrD,EACNwB,EAAkB5L,GAAK,cAMf,MAAPyN,EAAa,IACC,OAAbwC,SAEI5H,SAAS8H,eAAevB,GAI/BnB,EADG9B,EACGtD,SAAS+H,gBACd,6BAEAH,GAGK5H,SAASS,cAEdmH,EACArB,EAASyB,IAAMzB,GAKjBhD,EAAoB,KAEpBC,KAAc,GAGE,OAAboE,EAECzB,IAAaI,GAAc/C,GAAe4B,EAAIhL,OAASmM,IAC1DnB,EAAIhL,KAAOmM,OAEN,IAENhD,EAAoBA,GAAqBzC,EAAMhJ,KAAKsN,EAAI6C,YAIpDP,GAFJvB,EAAWxD,EAASvC,OAAS+D,GAEN+D,wBACnBP,EAAUpB,EAAS2B,yBAIlB1E,EAAa,IAGQ,MAArBD,MACH4C,EAAW,GACNxO,EAAI,EAAGA,EAAIyN,EAAI+C,WAAWtM,OAAQlE,IACtCwO,EAASf,EAAI+C,WAAWxQ,GAAGO,MAAQkN,EAAI+C,WAAWxQ,GAAGiB,OAInD+O,GAAWD,KAGZC,IACED,GAAWC,UAAkBD,UAC/BC,WAAmBvC,EAAIgD,aAExBhD,EAAIgD,UAAaT,GAAWA,UAAmB,QD3X7C,SAAmBvC,EAAKmB,EAAUJ,EAAU7C,EAAO+E,OACrD1Q,MAECA,KAAKwO,EACC,aAANxO,GAA0B,QAANA,GAAiBA,KAAK4O,GAC7CtB,EAAYG,EAAKzN,EAAG,KAAMwO,EAASxO,GAAI2L,OAIpC3L,KAAK4O,EAEN8B,GAAiC,mBAAf9B,EAAS5O,IACvB,aAANA,GACM,QAANA,GACM,UAANA,GACM,YAANA,GACAwO,EAASxO,KAAO4O,EAAS5O,IAEzBsN,EAAYG,EAAKzN,EAAG4O,EAAS5O,GAAIwO,EAASxO,GAAI2L,GC8W/CgF,CAAUlD,EAAKmB,EAAUJ,EAAU7C,EAAOE,GAGtCmE,EACH1B,MAAqB,WAErBtO,EAAIsO,EAAS7F,MAAMM,SACnBuC,EACCmC,EACAnB,MAAMC,QAAQvM,GAAKA,EAAI,CAACA,GACxBsO,EACAtD,EACAU,EACAC,GAAsB,kBAAbsE,EACTrE,EACA1E,EACA0E,EACGA,EAAkB,GAClBZ,OAAsBjB,EAAciB,EAAU,GACjDa,GAIwB,MAArBD,MACE5L,EAAI4L,EAAkB1H,OAAQlE,KACN,MAAxB4L,EAAkB5L,IAAY0I,EAAWkD,EAAkB5L,IAM7D6L,IAEH,UAAW+C,aACV5O,EAAI4O,EAAS3N,SAKbjB,IAAMyN,EAAIxM,OAAuB,aAAbgP,IAA4BjQ,IAEjDsN,EAAYG,EAAK,QAASzN,EAAGwO,EAASvN,UAGtC,YAAa2N,aACZ5O,EAAI4O,EAASgC,UACd5Q,IAAMyN,EAAImD,SAEVtD,EAAYG,EAAK,UAAWzN,EAAGwO,EAASoC,aAAS,OAK7CnD,EASR,SAAgBd,EAAS3D,EAAK/H,EAAOwF,OAEjB,mBAAPuC,EAAmBA,EAAI/H,GAC7B+H,EAAIW,QAAU1I,EAClB,MAAOwE,GACR3B,MAAoB2B,EAAGgB,IAYzB,SAAgBD,EAAQC,EAAOoK,EAAaC,GAA5C,IACKhQ,EAoBMd,KAnBN8D,EAAQ0C,SAAS1C,EAAQ0C,QAAQC,IAEhC3F,EAAI2F,EAAMuC,OACTlI,EAAE6I,SAAW7I,EAAE6I,UAAYlD,OAAYkG,EAAS7L,EAAG,KAAM+P,IAGjC,OAAzB/P,EAAI2F,OAA2B,IAC/B3F,EAAEiQ,yBAEJjQ,EAAEiQ,uBACD,MAAOtL,GACR3B,MAAoB2B,EAAGoL,GAIzB/P,EAAEuJ,KAAOvJ,MAAe,QAGpBA,EAAI2F,UACCzG,EAAI,EAAGA,EAAIc,EAAEoD,OAAQlE,IACzBc,EAAEd,IACLwG,EAAQ1F,EAAEd,GAAI6Q,EAAkC,mBAAdpK,EAAM5C,MAKtCiN,GAA4B,MAAdrK,OAAoBiC,EAAWjC,OAIlDA,MAAaA,aAId,SAASyI,EAASzG,EAAOxD,EAAO6E,UACxBkH,KAAKxH,YAAYf,EAAOqB,GClfhC,SAAgBmF,EAAOxI,EAAOyE,EAAW+F,GAAzC,IAMKpF,EAOAb,EAUA9D,EAtBApD,MAAeA,KAAc2C,EAAOyE,GAYpCF,GAPAa,EAAqC,mBAAhBoF,GAQtB,KACCA,GAAeA,OAA0B/F,MAQzChE,EAAc,GAClBiE,EACCD,EARDzE,IACGoF,GAAeoF,GACjB/F,OACapC,EAAcc,EAAU,KAAM,CAACnD,IAS5CuE,GAAYwB,EACZA,WACAtB,EAAUE,iBACTS,GAAeoF,EACb,CAACA,GACDjG,EACA,KACAE,EAAUgG,WACV/H,EAAMhJ,KAAK+K,EAAUoF,YACrB,KACHpJ,GACC2E,GAAeoF,EACbA,EACAjG,EACAA,MACAE,EAAUgG,WACbrF,GAIDR,EAAWnE,EAAaT,GASlB,SAASiK,EAAQjK,EAAOyE,GAC9B+D,EAAOxI,EAAOyE,EAAWwF,GC/D1B,SAAgBS,EAAa1K,EAAOgC,EAAOM,OAEzCxH,EACAyH,EACAhJ,EAHGiJ,EAAkBV,EAAO,GAAI9B,EAAMgC,WAIlCzI,KAAKyI,EACA,OAALzI,EAAYuB,EAAMkH,EAAMzI,GACd,OAALA,EAAYgJ,EAAMP,EAAMzI,GAC5BiJ,EAAgBjJ,GAAKyI,EAAMzI,UAG7BkJ,UAAUhF,OAAS,IACtB+E,EAAgBF,SACfG,UAAUhF,OAAS,EAAIiF,EAAMhJ,KAAK+I,UAAW,GAAKH,GAG7CM,EACN5C,EAAM5C,KACNoF,EACA1H,GAAOkF,EAAMlF,IACbyH,GAAOvC,EAAMuC,IACb,MC3BK,SAASoI,EAAcC,EAAcC,OAGrCxH,EAAU,KAFhBwH,EAAY,OAAStR,OAILqR,EAEfE,kBAAS9I,EAAO+I,UAIR/I,EAAMM,SAASyI,IAGvBC,kBAAShJ,OAEHiJ,EACAC,SAFAX,KAAKrB,kBACL+B,EAAO,IACPC,EAAM,IACNL,GAAaN,UAEZrB,gBAAkB,kBAAMgC,QAExBnC,sBAAwB,SAASoC,GACjCZ,KAAKvI,MAAMxH,QAAU2Q,EAAO3Q,OAe/ByQ,EAAK5L,KAAKwE,SAIP6E,IAAM,YACVuC,EAAKvN,KAAK9D,OACNwR,EAAMxR,EAAE0Q,qBACZ1Q,EAAE0Q,qBAAuB,WACxBW,EAAKI,OAAOJ,EAAKzH,QAAQ5J,GAAI,GACzBwR,GAAKA,EAAI1R,KAAKE,MAKdoI,EAAMM,kBAUPe,EAAQ2H,YAAuB3H,EAAQyH,SAASvC,YAAclF,EClEhE,sgBT0BMX,EUfPrF,ETRF2F,EA6FSsI,EC0ETxH,EAQEI,EAcFF,EM9LOzK,ECFEwM,EAAY,GACZJ,EAAY,GACZmB,EAAqB,oETwBrBpE,EAAQiD,EAAUjD,MUfzBrF,EAAU,KCJT,SAAqBkO,EAAOvL,WAE9BnB,EAAW2M,EAAMC,EAEbzL,EAAQA,UACVnB,EAAYmB,SAAsBnB,aAErC2M,EAAO3M,EAAUkE,cAE4B,MAAjCyI,EAAKE,2BAChB7M,EAAUT,SAASoN,EAAKE,yBAAyBH,IACjDE,EAAU5M,OAGwB,MAA/BA,EAAU8M,oBACb9M,EAAU8M,kBAAkBJ,GAC5BE,EAAU5M,OAIP4M,SACK5M,MAA0BA,EAElC,MAAOG,GACRuM,EAAQvM,QAKLuM,IVjCHvI,EAAU,EA6FDsI,EAAiB,mBACpB,MAATtL,YAAiBA,EAAM+C,aCvExBK,EAAUjI,UAAUiD,SAAW,SAASwN,EAAQtN,OAE3ChD,EAEHA,EADsB,MAAnBiP,KAAKA,KAAsBA,KAAKA,MAAeA,KAAK/L,MACnD+L,KAAKA,IAELA,KAAKA,IAAazI,EAAO,GAAIyI,KAAK/L,OAGlB,mBAAVoN,IAGVA,EAASA,EAAO9J,EAAO,GAAIxG,GAAIiP,KAAKvI,QAGjC4J,GACH9J,EAAOxG,EAAGsQ,GAIG,MAAVA,GAEArB,KAAKA,MACJjM,GAAUiM,KAAKA,IAAiB7M,KAAKY,GACzCuF,EAAc0G,QAUhBnH,EAAUjI,UAAU0Q,YAAc,SAASvN,GACtCiM,uBAKCjM,GAAUiM,KAAKA,IAAiB7M,KAAKY,GACzCuF,EAAc0G,QAchBnH,EAAUjI,UAAUqN,OAASrF,EAyFzBW,EAAgB,GAQdI,EACa,mBAAX4H,QACJA,QAAQ3Q,UAAU4Q,KAAKhR,KAAK+Q,QAAQE,WACpCxL,WA2CJuD,MAAyB,EM9NdxK,EAAI,G,kCIFf,uBAGA,MAAM,EAAE0S,EAAF,OAAKzD,EAAL,QAAayB,GAAYiC,EAEzBC,EAAiBxS,GAAMA,GAAKA,EAAEyS,QAAUzS,EAAEyS,QAAUzS,EAEpD0S,EAAeC,GAAgC,MAAxBA,EAAIA,EAAI7O,OAAS,GAAa6O,EAAMA,EAAM,IAyBvE,GATiC,kBAAmBC,WAEnDA,UAAUC,cAAcC,SACvBC,IAAkD,aAMjC,mBAFTP,EAAeQ,EAAQ,SAEF,CAC9B,IAAItD,EACHzH,SAASgL,eAAe,gBAAkBhL,SAASiL,KAAKC,kBAErDjP,EAAO,KACV,IAAIkP,EAAMZ,EAAeQ,EAAQ,SAC7BK,EAAgB,GACpB,MAAMC,EAAoBrL,SAASsL,cAClC,gCAEGD,IACHD,EACCG,KAAKC,MAAMC,UAAUJ,EAAkBjD,YAAYgD,eACnDA,GAMF,MAAMM,EAAW,CAAEN,iBACbO,EAAaP,EAAcV,IAAMD,EAAaW,EAAcV,KAAO,GACnEkB,EAGLvD,GACAsD,IAAelB,EAAaoB,SAASC,UAEtCrE,GADiBmE,EAAavD,EAAUzB,GACxByD,EAAEc,EAAK,CAAEO,aAAa1L,SAASiL,KAAMxD,IAGlD/P,EAEJuE","file":"bundle.57e9d.esm.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"mdyV\");\n","import { useEffect ,useState } from \"preact/hooks\";\r\n\r\nfunction Series({serie}) {\r\n    const [series, setSeries] = useState([])\r\n    const getSeriesInfo = async () => {\r\n        const response = await fetch(`https://www.omdbapi.com/?apikey=${process.env.PREACT_APP_API_KEY}&t=${serie}`)\r\n        const data = await response.json()\r\n        setSeries(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getSeriesInfo()\r\n    }, [serie])\r\n\r\n    const { Title, Year, Runtime, imdbRating, imdbVotes, Poster, Genre, Plot, Actors } = series\r\n\r\n    return (\r\n        <article style={\r\n            {\r\n                backgroundImage: `url(${Poster})`,\r\n                backgroundColor: '#00000080'\r\n            }\r\n        }>\r\n\r\n            <section className=\"card\">\r\n                <div className=\"imgBox\">\r\n                    <img src={Poster} alt=\"\" />\r\n                </div>\r\n                <div className=\"contentBox\">\r\n                    <div className=\"title-box\">\r\n                        <h1 className='title'>{Title}</h1>\r\n                        <div className=\"sub-title\">\r\n                            <h3>{Year}</h3>\r\n                            <h3>{Runtime}</h3>\r\n                            <h3>{Genre}</h3>\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"plot\">\r\n                        {Plot}\r\n                    </p>\r\n                    <p className=\"actors\">\r\n                        {Actors}\r\n                    </p>\r\n                    <section className=\"ratings\">\r\n                        <div className=\"rate\">\r\n                            <span>IMDB RATING</span>\r\n                            <h4>{imdbRating}</h4>\r\n                        </div>\r\n                        <div className=\"votes\">\r\n                            <span>IMDB VOTES</span>\r\n                            <h4>{imdbVotes}</h4>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            </section>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Series\r\n","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\thooks._pendingEffects = [];\n\t}\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks && c.__hooks._pendingEffects.length) {\n\t\tafterPaint(afterPaintEffects.push(c));\n\t}\n\tcurrentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\ttry {\n\t\t\tc.__hooks._list.forEach(invokeCleanup);\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst nextValue = hookState._reducer(hookState._value[0], action);\n\t\t\t\tif (hookState._value[0] !== nextValue) {\n\t\t\t\t\thookState._value = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\t}\n\n\treturn hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') ref(createHandle());\n\t\t\telse if (ref) ref.current = createHandle();\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tafterPaintEffects.forEach(component => {\n\t\tif (component._parentDom) {\n\t\t\ttry {\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t} catch (e) {\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t\toptions._catchError(e, component._vnode);\n\t\t\t}\n\t\t}\n\t});\n\tafterPaintEffects = [];\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tif (typeof hook._cleanup == 'function') hook._cleanup();\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","import { h } from 'preact';\nimport { useState } from \"preact/hooks\";\n\nconst Header = ({setSerie}) => {\n\tconst [search, setSearch] = useState('')\n    const [query, setQuery] = useState('')\n\n    const inputHandler = (e) => {\n        setSearch(e.target.value)\n    }\n    const submitHandler = (e) => {\n        e.preventDefault()\n        const text=search.replace(' ','+')\n        setQuery(text)\n        setSerie(text)\n        setSearch('')\n    }\n    return (\n        <header>\n            <h1 className='logo font-effect-anaglyph'>seriesinfo</h1>\n            <form onSubmit={(e)=>submitHandler(e)}>\n                <input \n                type=\"text\" \n                value={search} \n                onChange={(e) => inputHandler(e)}\n                placeholder='search'\n                />\n            </form>\n        </header>\n    )\n};\n\nexport default Header;\n","import './style';\nimport App from './components/app';\n\nexport default App;\n","import { h } from 'preact';\nimport { useState, useEffect } from \"preact/hooks\";\n\nimport Header from './header';\n\n// Code-splitting is automated for `routes` directory\nimport Series from './series';\n\nconst App = () => {\n\tconst [serie, setSerie] = useState('spartacus blood')\n\t\n\tuseEffect(() => {\n\t\tdocument.title='Series-Info by BRIZZLER'\n\t}, [])\n\n\treturn(\n\t\t<div className=\"App\">\n\t\t\t<Header setSerie={setSerie}/>\n\t\t\t<Series serie={serie}/>\n\t\t</div>\n\t)\n}\n\nexport default App;\n","import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb: () => void) => void}\n */\n/* istanbul ignore next */\n// Note the following line isn't tree-shaken by rollup cuz of rollup/rollup#2566\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tnull,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldParentVNode, i + 1);\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tvnode,\n\t\t\t\t\tvnode,\n\t\t\t\t\tc,\n\t\t\t\t\tvnode._dom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 2\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink[H:h]/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (\n\t\t\tvalue != null &&\n\t\t\t(value !== false || (name[0] === 'a' && name[1] === 'r'))\n\t\t) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif ((tmp = options._render)) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t(child === dom ||\n\t\t\t\t\t(nodeType ? child.localName == nodeType : child.nodeType == 3))\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value || (nodeType === 'progress' && !i))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) applyRef(r, null, parentVNode);\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(r[i], parentVNode, typeof vnode.type != 'function');\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) removeNode(vnode._dom);\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function(_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(enqueueRender);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType = context);\n}\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n */\nexport function _catchError(error, vnode) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","/* global __webpack_public_path__ */\n\nimport * as Preact from 'preact';\nconst { h, render, hydrate } = Preact;\n\nconst interopDefault = m => (m && m.default ? m.default : m);\n\nconst normalizeURL = url => (url[url.length - 1] === '/' ? url : url + '/');\n\nif (process.env.NODE_ENV === 'development') {\n\t// enable preact devtools\n\trequire('preact/debug');\n\n\t// only add a debug sw if webpack service worker is not requested.\n\tif (process.env.ADD_SW === undefined && 'serviceWorker' in navigator) {\n\t\t// eslint-disable-next-line no-undef\n\t\tnavigator.serviceWorker.register(__webpack_public_path__ + 'sw-debug.js');\n\t} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\t\t// eslint-disable-next-line no-undef\n\t\tnavigator.serviceWorker.register(\n\t\t\t__webpack_public_path__ + (process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t\t);\n\t}\n} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\t// eslint-disable-next-line no-undef\n\tnavigator.serviceWorker.register(\n\t\t__webpack_public_path__ + (process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t);\n}\n\nlet app = interopDefault(require('preact-cli-entrypoint'));\n\nif (typeof app === 'function') {\n\tlet root =\n\t\tdocument.getElementById('preact_root') || document.body.firstElementChild;\n\n\tlet init = () => {\n\t\tlet app = interopDefault(require('preact-cli-entrypoint'));\n\t\tlet preRenderData = {};\n\t\tconst inlineDataElement = document.querySelector(\n\t\t\t'[type=\"__PREACT_CLI_DATA__\"]'\n\t\t);\n\t\tif (inlineDataElement) {\n\t\t\tpreRenderData =\n\t\t\t\tJSON.parse(decodeURI(inlineDataElement.innerHTML)).preRenderData ||\n\t\t\t\tpreRenderData;\n\t\t}\n\t\t/* An object named CLI_DATA is passed as a prop,\n\t\t * this keeps us future proof if in case we decide,\n\t\t * to send other data like at some point in time.\n\t\t */\n\t\tconst CLI_DATA = { preRenderData };\n\t\tconst currentURL = preRenderData.url ? normalizeURL(preRenderData.url) : '';\n\t\tconst canHydrate =\n\t\t\tprocess.env.PRERENDER &&\n\t\t\tprocess.env.NODE_ENV === 'production' &&\n\t\t\thydrate &&\n\t\t\tcurrentURL === normalizeURL(location.pathname);\n\t\tconst doRender = canHydrate ? hydrate : render;\n\t\troot = doRender(h(app, { CLI_DATA }), document.body, root);\n\t};\n\n\tif (module.hot) module.hot.accept('preact-cli-entrypoint', init);\n\n\tinit();\n}\n"],"sourceRoot":""}